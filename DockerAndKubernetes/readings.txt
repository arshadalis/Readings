Docker is software which makes easy to install and run a software on any computer(very high level).

Image is snapshot of some file system and a startup program.
it have own resources like its own memory, networking etc. own disk space etc.

Container runs an image inside.

kernel is heart of operating system.
it resides between computer hardware and the processes running on computer.
kernel allows the processes to use the resources.

Docker Server (or Docker Daemon)
It is the software which is responsible for running containers, creating images etc.

Docker CLI
Command line Interface to instruct Docker server to run/create image etc.
Docker server is something with which we cannot work directly, it runs in background.
we use Docker CLI for that.

==========================================================================================================
## Kernel and working of OS
Kernel is the heart of any operating system. All hardware resources like RAM, CPU, HDD is actually used by kernel.
So whatever processes we are running on our computer like Chrome, Word etc. which needs access to this resources
get access via Kernel. Kernel exposes some APIs which these processes calls to store data to HDD or etc etc.

## Namespacing
Namespacing is the technique of dividing the resources into diff segments for different resources.
For example lets say chrome wants python2 and node wants python3. just assume that we can have only instance
of any identical process, like python in this case. So using namespacing we can divide HDD into two segments
one having python2 and other having python3. depending upon the calling process Kernel will redirect the call
to one of the segment.

## Control groups
Using control groups we can control which process can consume how much amount of which resource.

*** Container is something that uses these two concepts to run particular process on given OS.
refer diagram container-01.jpg

Image is a snapshot of file system and a startup call.
Container put that snapshot in one of the segment and run the startup call to start the container via
operating systems native kernel.

These features Namespacing and Control groups are of linux OS only.
There is linux virtual machine running on mac or windows os for Docker to run on it.

virtual machines
virtual machines emulates the hardware of machine and then runs the operating system on it.
it makes them very heavy weight.

docker
docker does not emulates the hardware, it even uses key features of same operating system
unlike virtual machine which actually runs another operating system on actual operating system.
hence docker is very light weight

As we know docker image is a snapshot of File system and some default start command.
we can override this command like this
docker run <image_name> <command>

## Container Lifecycle
docker create image -> creates an container with the file system snapshot inside it.
docker start containerId -> starts the run/startup command inside the container and starts the container.
docker start -a containerId -> starts the run/startup command of container and attaches the output to the docker client.

commands

docker ps -> lists all the currently running containers

docker ps -a -> lists all the containers ran and exited till now

we can start the exited container with its id.
but we cannot the override the default startup command of older container.

docker system prune -> to remove all the stopped containers

docker logs containerId -> to see logs of any stopped container

docker stop containerId -> stops the process running inside. SIGTERM message is sent to the process.
recommended. processes get the chance to properly shut down.

docker kill containerId -> kills the process running inside. SIGKILL message is sent to the process.
kills the container immediately. if the container is not responding.






































